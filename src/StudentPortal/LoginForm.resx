<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAACMuAAAjLgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP1YAAD9WAAA/VgAKP1YAMT5V
        AFk9VQBtPlUAZj9WAEY/VgAbP1YAAj9WAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP1YAAD9WAAA/VgAJP1YAUzxU
        ALM9VADnQ1oG+UheDf1GXQr8P1YC8jxTANI9VQCFP1YAJD5WAAA/VgAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD9WAAA/VgAAP1YAGz1V
        AJ1AVwP2Y3Yw/56pfv/GzbP/1drH/9DWwf+1vp3/gJBX/0xhEf89VADXP1YAU0BWAAI/VgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/VgAAP1YAAD9W
        ABg9VACySl8P/5+qf//t7+j////////////////////////////7/Pr/ztS+/2t9O/8+VQDsP1YAWj5V
        AAA/VgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD9W
        AAA/VgAFPlUAk0heDf+zvJr//f38////////////////////////////////////////////5+rf/3GC
        Q/89VADhP1YANT9WAAA/VgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAA/VgAAP1YAAD9WAEQ/VgDwlqN0//z9+///////////////////////////////////////////////
        ////////2t7O/1ZrH/89VACnP1YABz9WAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAD9WAAA/VgACPVQAnVFmGP/f4tT/////////////////////////////////////////
        ////////////////////////kZ5t/zxTAOw/VgA1P1YAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAP1YAAD9WABg+VQDWVm0b/9fdyf//////////////////////////////
        //////////////////////////////z9+/+PoGf/QFgB/z5VAHA/VgAAP1YAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/VgAAP1YAMT9WAO5feyL/tsKa////////////////////
        ////////////////////////////////////////6+3k/3+XTP9JYgr/PlUAlz9WAAA/VgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD9WAAA/VgA8P1YA9GaDKf+Sp2f/4OTW/+Pn
        2v/j59r/4+fa/+Pn2v/j59r/4+fa/+Pn2v/j59r/4+fa/+Xp3f++yKf/eJU+/01mD/8+VACmP1YAAT9W
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP1YAAD9WAD0/VgD1aYUt/32b
        Q/9+mkn/f5tK/3+bSv9/m0r/f5tK/3+bSv9/m0r/f5tK/3+bSv9/m0r/f5tK/3yZRf97mkD/TWYP/z5U
        AKc/VgACP1YAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/VgAAP1YAPT9W
        APVohS3/gKBG/3+fRf9+n0P/fp9D/36fQ/9+n0P/fp9D/36fQ/9+n0P/fp9D/36fQ/9/n0T/f6BF/3yb
        Qv9NZg//PlQApz9WAAI/VgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD9W
        AAA/VgA9P1YA9WiFLf+AoEb/epdC/4OdUP+EnlH/hJ5R/4SeUf+EnlH/hJ5R/4SeUf+EnlH/hJ5R/36Z
        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
        AH/+AAB//gAA//8AAf//gAH//8AH///wD/8=
</value>
  </data>
</root>